version: '3'
services:
  # filebrowser - web file manager
  filebrowser:
    image: filebrowser/filebrowser:latest
    user: '{{ gb_user_uid }}:{{ gb_user_gid }}'
    volumes:
    - '{{ filebrowser_root_path }}:/srv'
    - ./volumes/filebrowser/database.db:/database.db
    - ./volumes/filebrowser/filebrowser.json:/.filebrowser.json
    ports:
    - 8080:8080
    logging:
      driver: journald
    restart: always

  # navidrome - self-hosted spotify
  navidrome:
    image: deluan/navidrome:latest
    user: '{{ gb_user_uid }}:{{ gb_user_gid }}'
    ports:
    - 4533:4533
    environment:
      ND_CONFIGFILE: /data/config.toml
    volumes:
    - ./volumes/navidrome:/data
    - '{{ navidrome_music_path }}:/music:ro'
    logging:
      driver: journald
    restart: always

  # samba - network shares that every OS supports easily
  samba:
    image: crazymax/samba
    ports:
    - 139:139
    - 445:445
    volumes:
    - "{{ gb_root }}/volumes/samba/data:/data"
    - '{{ samba_share_path }}:/samba/ghettobox'
    environment:
      TZ: "{{ local_timezone }}"
    restart: unless-stopped

  # caddy - reverse proxy for important services
  caddy:
    image: slothcroissant/caddy-cloudflaredns:latest
    restart: unless-stopped
    volumes:
    - '{{ gb_root }}/volumes/caddy/data:/data'
    - '{{ gb_root }}/volumes/caddy/config:/config'
    - '{{ gb_root }}/volumes/caddy/Caddyfile:/etc/caddy/Caddyfile'
    network_mode: host
    environment:
      CLOUDFLARE_API_TOKEN: "{{ cloudflare_api_token }}"
      CLOUDFLARE_EMAIL: "{{ cloudflare_email }}"
      ACME_AGREE: "{{ true }}"

  # transmission - bittorrent session running through openVPN
  transmission:
    image: haugene/transmission-openvpn:latest
    cap_add:
      - NET_ADMIN
    volumes:
    - '{{ transmission_share_path }}:/data'
    - '{{ gb_root }}/volumes/transmission/config:/config'
    environment:
      OPENVPN_PROVIDER: PIA
      OPENVPN_CONFIG: mexico
      OPENVPN_USERNAME: "{{ openvpn_username }}"
      OPENVPN_PASSWORD: "{{ openvpn_password }}"
      LOCAL_NETWORK: 192.168.0.0/16
      PUID: '{{ user_uid.stdout }}'
      PGID: '{{ user_gid.stdout }}'
      TRANSMISSION_RPC_USERNAME: "{{ transmission_username }}"
      TRANSMISSION_RPC_PASSWORD: "{{ transmission_password }}"
      TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "true"
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      - 9091:9091

  # restic - automatic backups for important data
  restic-backup:
    image: mazzolino/restic:latest
    environment:
      RUN_ON_STARTUP: 'true'
      BACKUP_CRON: '{{ restic_backup_schedule }}'
      RESTIC_PASSWORD: ghettobox
      RESTIC_REPOSITORY: /mnt/restic
      RESTIC_BACKUP_SOURCES: /data
      RESTIC_BACKUP_ARGS: --tag docker-volumes --verbose
      RESTIC_FORGET_ARGS: --keep-last {{ restic_keep_last }}
      TZ: '{{ local_timezone }}'
    volumes:
    - '{{ restic_backup_src }}:/data:ro'
    - '{{ restic_backup_path }}:/mnt/restic'

  restic-prune:
    image: mazzolino/restic:latest
    environment:
      RUN_ON_STARTUP: 'true'
      PRUNE_CRON: '{{ restic_prune_schedule }}'
      RESTIC_REPOSITORY: /mnt/restic
      RESTIC_PASSWORD: ghettobox
      TZ: '{{ local_timezone }}'
