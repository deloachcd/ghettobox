[[./img/ghettobox.png]]

* ghettobox
Provisioning servers from a single file.
** What is this?
This is my personal solution for automating a large portion of the
provisioning work involved in setting up a home/office server hosting multiple
containerized services behind a reverse proxy. It aims for a balance of
implementation simplicity and providing useful abstractions, and
makes no attempt to comprehensively automate the provisioning process.

Instead of comprehensively automating, this software aims to cut down the
work involved in:
- locking down the firewall
- writing an nginx config
- writing a docker-compose file
- writing Ansible (or manually creating/modifying files and directories over SSH)
- writing fail2ban filters and jails

You just pick the services you want, set configuration options like where you
want them to store their persistent data, and this software generates an
Ansible provisioner to do all this monotenous prep work automatically.
For simple setups, you might be able to just SSH in and run ~docker-compose up~
to bring up all your services.
** Setup
*** Pre-requisites
- Server running a currently supported version of [[https://www.debian.org/][Debian]]
- [[https://docs.docker.com/engine/install/debian/][Docker Engine]] installed on server, ~docker-compose~ installed for service user
- ~python3-venv~ or equivalent installed on client PC where repo is cloned
- A user account on the Debian server with ~sudo~ permissions, able to SSH via keyauth, able to manage docker containers
*** Steps
1. Clone this repo and navigate to the root directory
2. Run ~./script/init.sh~
3. Set configuration options for the server configuration on the client-side in ~user/ghettobox.yml~
4. Now, generate the provisioner with ~./script/generate.sh~
5. If all goes well, the provisioner can be run with: ~cd ansible && ./provision.sh~
6. 
