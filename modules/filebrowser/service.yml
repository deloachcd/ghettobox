proxy: |
  location /drive/ {
    proxy_pass http://localhost:8080/;
  }

firewall:
  - port: 8080
    scope: lan

compose:
  filebrowser:
    image: filebrowser/filebrowser:latest
    user: "{{ user_uid.stdout }}:{{ user_gid.stdout }}"
    volumes:
      - "{{ filebrowser_root_path }}:/srv"
      - "./volumes/filebrowser/database.db:/database.db"
      - "./volumes/filebrowser/filebrowser.json:/.filebrowser.json"
    ports:
      - "8080:8080"
    restart: always

tasks:
  - name: Ensure our user owns the filebrowser root
    file:
      path: "{{ filebrowser_root_path }}"
      owner: "{{ gb_user }}"
      recurse: yes
    become: yes

  - name: Ensure we have a directory for filebrowser volume data on the host
    file:
      path: "{{ gb_root }}/volumes/filebrowser"
      state: directory

  - name: Ensure filebrowser database file exists on the host
    file:
      path: "{{ gb_root }}/volumes/filebrowser/database.db"
      state: touch

  - name: Copy over filebrowser config
    copy:
      src: filebrowser.json
      dest: "{{ gb_root }}/volumes/filebrowser/filebrowser.json"

fail2ban:
  filter: |
    [INCLUDES]
    before = common.conf

    [Definition]
    datepattern = ^%%Y/%%m/%%d %%H:%%M:%%S\s
    
    # Sample message:
    # 2022/08/02 11:28:04 /api/login: 403 8.8.8.8 <nil>
    
    failregex = /(.*?): 403 <HOST>\s

  jail: |
    [filebrowser-failed-auth]
    enabled = true
    action = route
    filter = filebrowser
    
